/*
 * Rekor
 *
 * Rekor is a cryptographically secure, immutable transparency log for signed software releases.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */





#[cfg(feature = "no_std")]
use alloc::string::String;
#[cfg(feature = "no_std")]
use alloc::boxed::Box;
use serde_with::serde_as;
use serde_with::hex::Hex;

#[serde_as]
#[derive(Clone, Debug, PartialEq, serde::Serialize, serde::Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SearchIndex {
    #[serde(skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    #[serde(skip_serializing_if = "Option::is_none")]
    pub public_key: Option<Box<crate::models::SearchIndexPublicKey>>,
    #[serde(skip_serializing_if = "Option::is_none")]
    #[serde_as(as = "Option<Box<Hex>>")]
    pub hash: Option<Box<[u8; 32]>>,
    #[serde(skip_serializing_if = "Option::is_none")]
    pub operator: Option<Operator>,
}

impl SearchIndex {
    pub fn new() -> SearchIndex {
        SearchIndex {
            email: Option::<_>::None,
            public_key: Option::<_>::None,
            hash: Option::<_>::None,
            operator: Option::<_>::None,
        }
    }
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, serde::Serialize, serde::Deserialize)]
pub enum Operator {
    #[serde(rename = "and")]
    And,
    #[serde(rename = "or")]
    Or,
}

impl Default for Operator {
    fn default() -> Operator {
        Self::And
    }
}

