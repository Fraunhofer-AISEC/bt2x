/*
 * Rekor
 *
 * Rekor is a cryptographically secure, immutable transparency log for signed software releases.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[cfg(feature = "no_std")]
use alloc::vec::Vec;

use serde_with::serde_as;
use serde_with::hex::Hex;

#[serde_as]
#[derive(Clone, Debug, PartialEq, serde::Serialize, serde::Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct ConsistencyProof {
    /// The hash value stored at the root of the merkle tree at the time the proof was generated
    #[serde_as(as = "Hex")]
    pub root_hash: [u8; 32],
    //String,
    #[serde_as(as = "Vec<Hex>")]
    pub hashes: Vec<[u8; 32]>,
}

impl ConsistencyProof {
    pub fn new(root_hash: [u8; 32], hashes: Vec<[u8; 32]>) -> ConsistencyProof {
        ConsistencyProof {
            root_hash: root_hash.into(),
            hashes,
        }
    }
}


