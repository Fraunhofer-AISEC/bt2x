/*
 * Rekor
 *
 * Rekor is a cryptographically secure, immutable transparency log for signed software releases.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */


#[cfg(feature = "no_std")]
use alloc::vec::Vec;
#[cfg(feature = "no_std")]
use alloc::string::String;


#[derive(Clone, Debug, PartialEq, serde::Serialize, serde::Deserialize)]
#[serde(rename_all = "camelCase")]
pub struct SearchLogQuery {
    #[serde(rename = "entryUUIDs", skip_serializing_if = "Option::is_none")]
    pub entry_uuids: Option<Vec<String>>,
    #[serde(skip_serializing_if = "Option::is_none")]
    pub log_indexes: Option<Vec<i32>>,
    #[serde(skip_serializing_if = "Option::is_none")]
    pub entries: Option<Vec<crate::models::ProposedEntry>>,
}

impl SearchLogQuery {
    pub fn new() -> SearchLogQuery {
        SearchLogQuery {
            entry_uuids: Option::<Vec<String>>::None,
            log_indexes: Option::<_>::None,
            entries: Option::<_>::None,
        }
    }
}


